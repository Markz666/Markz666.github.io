<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Fool]]></title>
    <url>%2F2018%2F04%2F01%2Ffool%2F</url>
    <content type="text"><![CDATA[Today is April Foolâ€™s Day. I am fooled.]]></content>
  </entry>
  <entry>
    <title><![CDATA[Extending Bootstrap]]></title>
    <url>%2F2017%2F11%2F08%2FMy-new-post%2F</url>
    <content type="text"><![CDATA[Here are some free plugins, add-ons, and component for bootstrapDatepickerBootstrap star ratingTabcordion.jsA simple jQuery plugin that transforms a set of Bootstrap tabs into a Bootstrap accordion.]]></content>
  </entry>
  <entry>
    <title><![CDATA[This is the solution for Josephus problem.]]></title>
    <url>%2F2017%2F11%2F07%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Josephus ProblemFunction definition1public int[] myJosephus(int n, int k) &#123;&#125;Initialize data structure123int killIndex = 0;int[] res = new int[n];ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;();Add all people into a list123for (int i = 0; i &lt; n; i++) &#123; list.add(i);&#125;Kill people, add killIndex into result array and remove killed people from the list12345for (int i = list.size() - 1; i &gt;= 0; i--) &#123; killIndex = (killIndex + k - 1) % list.size(); res[n - i - 1] = list.get(killIndex); list.remove(killIndex); &#125;Finally, remember to return res, and we can get the simulation of Josephus problem.]]></content>
  </entry>
</search>
